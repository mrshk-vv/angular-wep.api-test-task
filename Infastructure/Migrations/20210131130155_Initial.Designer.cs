// <auto-generated />
using System;
using Infastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Infrastructure.Migrations
{
    [DbContext(typeof(ShopContext))]
    [Migration("20210131130155_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("Core.Entities.Customer", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = "c7c572d8-3884-4d34-8f20-296b3a1b0daf",
                            Address = "775 Westminster Avenue APT D5",
                            CreatedDate = new DateTime(2021, 1, 31, 15, 1, 54, 977, DateTimeKind.Local).AddTicks(4791),
                            Name = "Donald Trump"
                        },
                        new
                        {
                            Id = "7e9ddc24-e7e1-488a-bd90-3c45dfddc5ad",
                            Address = "White House",
                            CreatedDate = new DateTime(2021, 1, 31, 15, 1, 54, 982, DateTimeKind.Local).AddTicks(9028),
                            Name = "Joseph Biden"
                        });
                });

            modelBuilder.Entity("Core.Entities.Order", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalCost")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = "d6fe22af-5bf3-4fd3-8e8f-895b9a598984",
                            Comment = "Some order",
                            CreatedDate = new DateTime(2021, 1, 31, 15, 1, 54, 986, DateTimeKind.Local).AddTicks(1985),
                            CustomerId = "c7c572d8-3884-4d34-8f20-296b3a1b0daf",
                            Status = "Delivered",
                            TotalCost = 50m
                        },
                        new
                        {
                            Id = "41c03ee0-e2e8-4be9-9878-33033bd0968c",
                            Comment = "Another some order",
                            CreatedDate = new DateTime(2021, 2, 1, 15, 1, 54, 986, DateTimeKind.Local).AddTicks(5899),
                            CustomerId = "7e9ddc24-e7e1-488a-bd90-3c45dfddc5ad",
                            Status = "New",
                            TotalCost = 25m
                        });
                });

            modelBuilder.Entity("Core.Entities.OrderItem", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<long>("Count")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrderId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProductId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProductSize")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderItems");

                    b.HasData(
                        new
                        {
                            Id = "d7d49e0e-0acf-48a5-8f30-9b3cc3915711",
                            Count = 3L,
                            CreatedDate = new DateTime(2021, 1, 31, 15, 1, 54, 986, DateTimeKind.Local).AddTicks(8293),
                            OrderId = "d6fe22af-5bf3-4fd3-8e8f-895b9a598984",
                            ProductId = "83c86da3-7028-4493-ab31-a76bb4cc6548",
                            ProductSize = "Small"
                        },
                        new
                        {
                            Id = "ec83ab4c-f0d5-4b80-aa98-42b4bd37fe13",
                            Count = 1L,
                            CreatedDate = new DateTime(2021, 1, 31, 15, 1, 54, 987, DateTimeKind.Local).AddTicks(1081),
                            OrderId = "d6fe22af-5bf3-4fd3-8e8f-895b9a598984",
                            ProductId = "447979df-4134-4410-9c53-53c140412ee8",
                            ProductSize = "Medium"
                        },
                        new
                        {
                            Id = "84ec47ba-443c-4f60-ac3d-5a760aae9ea3",
                            Count = 5L,
                            CreatedDate = new DateTime(2021, 1, 31, 15, 1, 54, 987, DateTimeKind.Local).AddTicks(1162),
                            OrderId = "41c03ee0-e2e8-4be9-9878-33033bd0968c",
                            ProductId = "447979df-4134-4410-9c53-53c140412ee8",
                            ProductSize = "Small"
                        });
                });

            modelBuilder.Entity("Core.Entities.Product", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("Quantity")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = "83c86da3-7028-4493-ab31-a76bb4cc6548",
                            Category = "Drinks",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Coca-Cola",
                            Price = 15.0m,
                            Quantity = 50L
                        },
                        new
                        {
                            Id = "447979df-4134-4410-9c53-53c140412ee8",
                            Category = "Dessert",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Very tasty chocolate",
                            Name = "Milka",
                            Price = 5.0m,
                            Quantity = 10L
                        });
                });

            modelBuilder.Entity("Core.Entities.Order", b =>
                {
                    b.HasOne("Core.Entities.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Core.Entities.OrderItem", b =>
                {
                    b.HasOne("Core.Entities.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Core.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId");

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Core.Entities.Customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Core.Entities.Order", b =>
                {
                    b.Navigation("OrderItems");
                });
#pragma warning restore 612, 618
        }
    }
}
